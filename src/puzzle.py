from dataclasses import dataclass
from pygame import Surface
from engine import Engine
from tile import EmptyTile, WallTile, LeftVerticalWallTile, RightVerticalWallTile, CornerLeftTile, CornerRightTile
from entity import PlayerEntity, SnakeEntity, RatEntity, KeyEntity, DoorEntity, ExitEntity
from typing import Any

all_tiles = {
    ".": EmptyTile,
    "#": WallTile,
    "[": LeftVerticalWallTile,
    "]": RightVerticalWallTile,
    "<": CornerLeftTile,
    ">": CornerRightTile,
}

all_entities = {
    "p": PlayerEntity,
    "s": SnakeEntity,
    "r": RatEntity,
    "k": KeyEntity,
    "d": DoorEntity,
    "X": ExitEntity
}

@dataclass
class Puzzle:
    name: str
    grid: list[str]

    def make_engine(self, tilemap: Surface) -> Engine:
        width, height = len(self.grid[0]), len(self.grid)
        engine: Engine = Engine(tilemap, width, height)

        # process the grid

        for y, line in enumerate(self.grid):
            for x, char in enumerate(line):
                if char in all_tiles:
                    engine.world[y][x] = all_tiles[char](x, y)
                elif char in all_entities:
                    t = all_entities[char]
                    entity = t(x, y)
                    engine.entities.update({entity.id: entity})
                    if t == PlayerEntity:
                        engine.player = list(engine.entities.values())[-1]
                    engine.world[y][x] = EmptyTile(x, y)
                else:
                    raise ValueError(f"Unknown character '{char}' at ({x}, {y}) goober")

        return engine
    
puzzles = [
    Puzzle("IDK", [
            "<################################################>",
            "[................................................]",
            "[................................................]",
            "[................................................]",
            "[................................................]",
            "[................................................]",
            "[................................................]",
            "[................................................]",
            "[................................................]",
            "[..p...........................................X.]",
            "[................................................]",
            "[................................................]",
            "[................................................]",
            "[................................................]",
            "[................................................]",
            "[................................................]",
            "[................................................]",
            "[................................................]",
            "##################################################",
        ]
    ),
    Puzzle("Locked Door", [
            "<###########################<>###########################>",
            "[...........................[]...........................]",
            "[...........................[]...........................]",
            "[..........r................[]...........................]",
            "[...........................[]...........................]",
            "[...........................[]...........................]",
            "[...........................[]...........................]",
            "[.......................s...[]...........................]",
            "[...........................##...........................]",
            "[..p..............k.........dd...........................]",
            "[...........................<>...........................]",
            "[...........................[]...........................]",
            "[...........................[]...........................]",
            "[...........................[]...........................]",
            "[...........................[]............s..............]",
            "[.........r.................[]...........................]",
            "[...........................[]...........................]",
            "[...........................[]...........................]",
            "##########################################################",
        ]
    )
]